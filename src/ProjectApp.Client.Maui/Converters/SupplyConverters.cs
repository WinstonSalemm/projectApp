using System.Globalization;

namespace ProjectApp.Client.Maui.Converters;

// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –¥–ª—è —Ü–≤–µ—Ç–∞ —Ç–∞–±–∞
public class TabToColorConverter : IValueConverter
{
    public object Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        if (value == null || parameter == null)
            return Colors.Gray;

        var currentTab = value.ToString();
        var tabName = parameter.ToString();

        return currentTab == tabName ? Color.FromArgb("#3498db") : Color.FromArgb("#95a5a6");
    }

    public object ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ç–µ–∫—Å—Ç
public class SupplyStatusConverter : IValueConverter
{
    public object Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        if (value == null) return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

        var status = value.ToString();
        return status switch
        {
            "HasStock" => "‚úÖ –ï—Å—Ç—å —Ç–æ–≤–∞—Ä",
            "Finished" => "üî¥ –ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å",
            _ => status
        };
    }

    public object ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Å—Ç–∞—Ç—É—Å–∞ –≤ —Ü–≤–µ—Ç
public class SupplyStatusColorConverter : IValueConverter
{
    public object Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        if (value == null) return Colors.Gray;

        var status = value.ToString();
        return status switch
        {
            "HasStock" => Color.FromArgb("#27ae60"),
            "Finished" => Color.FromArgb("#e74c3c"),
            _ => Colors.Gray
        };
    }

    public object ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ—Å—Ç–∞–≤–∫–∞ –≤ ND-40
public class IsNd40Converter : IValueConverter
{
    public object Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        if (value is string registerType)
            return registerType == "ND40";
        return false;
    }

    public object ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ IM-40
public class IsIm40Converter : IValueConverter
{
    public object Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        if (value is string registerType)
            return registerType == "IM40";
        return false;
    }

    public object ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}
