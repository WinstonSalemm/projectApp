// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectApp.Api.Data;

#nullable disable

namespace ProjectApp.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ProjectApp.Api.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inn")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Inn = "123456789",
                            Name = "Acme LLC",
                            Phone = "+998 90 000 00 01"
                        },
                        new
                        {
                            Id = 2,
                            Inn = "223456789",
                            Name = "Globex Ltd",
                            Phone = "+998 90 000 00 02"
                        },
                        new
                        {
                            Id = 3,
                            Name = "John Doe",
                            Phone = "+998 90 000 00 03"
                        });
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SaleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sku");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coffee Beans 1kg",
                            Price = 15.99m,
                            Sku = "SKU-001",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tea Leaves 500g",
                            Price = 8.49m,
                            Sku = "SKU-002",
                            Unit = "pkg"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sugar 1kg",
                            Price = 2.29m,
                            Sku = "SKU-003",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Milk 1L",
                            Price = 1.19m,
                            Sku = "SKU-004",
                            Unit = "ltr"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Butter 200g",
                            Price = 3.79m,
                            Sku = "SKU-005",
                            Unit = "pkg"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bread Loaf",
                            Price = 1.99m,
                            Sku = "SKU-006",
                            Unit = "pc"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Eggs (12)",
                            Price = 2.99m,
                            Sku = "SKU-007",
                            Unit = "box"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Olive Oil 500ml",
                            Price = 6.49m,
                            Sku = "SKU-008",
                            Unit = "btl"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Pasta 1kg",
                            Price = 2.59m,
                            Sku = "SKU-009",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tomato Sauce 300g",
                            Price = 2.39m,
                            Sku = "SKU-010",
                            Unit = "jar"
                        });
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RefSaleId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ProjectApp.Api.Models.SaleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("SaleId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Stock", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Register")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("ProductId", "Register");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 1,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 2,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 2,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 3,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 3,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 4,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 4,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 5,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 5,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 6,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 6,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 7,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 7,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 8,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 8,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 9,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 9,
                            Register = 0,
                            Qty = 50m
                        },
                        new
                        {
                            ProductId = 10,
                            Register = 1,
                            Qty = 100m
                        },
                        new
                        {
                            ProductId = 10,
                            Register = 0,
                            Qty = 50m
                        });
                });

            modelBuilder.Entity("ProjectApp.Api.Models.SaleItem", b =>
                {
                    b.HasOne("ProjectApp.Api.Models.Sale", null)
                        .WithMany("Items")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectApp.Api.Models.Sale", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
