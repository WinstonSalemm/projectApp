using ProjectApp.Api.Services;

namespace ProjectApp.Api.Integrations.Email;

/// <summary>
/// HTML-—à–∞–±–ª–æ–Ω—ã –¥–ª—è Email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/// </summary>
public static class EmailTemplates
{
    /// <summary>
    /// –ë–∞–∑–æ–≤—ã–π HTML-—à–∞–±–ª–æ–Ω —Å header –∏ footer
    /// </summary>
    private static string BaseTemplate(string title, string content)
    {
        return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <style>
        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; background-color: #f4f4f4; }}
        .container {{ max-width: 600px; margin: 20px auto; background: #fff; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }}
        .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: #fff; padding: 30px; text-align: center; }}
        .header h1 {{ margin: 0; font-size: 24px; }}
        .content {{ padding: 30px; }}
        .footer {{ background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #666; }}
        .metric-box {{ background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 6px; border-left: 4px solid #667eea; }}
        .metric-label {{ font-size: 12px; color: #666; text-transform: uppercase; }}
        .metric-value {{ font-size: 24px; font-weight: bold; color: #333; margin: 5px 0; }}
        .alert-box {{ background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 15px 0; border-radius: 6px; }}
        .success-box {{ background: #d4edda; border-left: 4px solid #28a745; padding: 15px; margin: 15px 0; border-radius: 6px; }}
        .danger-box {{ background: #f8d7da; border-left: 4px solid #dc3545; padding: 15px; margin: 15px 0; border-radius: 6px; }}
        table {{ width: 100%; border-collapse: collapse; margin: 15px 0; }}
        th {{ background: #f8f9fa; padding: 10px; text-align: left; font-size: 12px; text-transform: uppercase; color: #666; }}
        td {{ padding: 10px; border-bottom: 1px solid #e9ecef; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üî• {title}</h1>
        </div>
        <div class='content'>
            {content}
        </div>
        <div class='footer'>
            <p>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏<br>
            <strong>ProjectApp</strong> - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–æ–º</p>
            <p>¬© 2025 ProjectApp. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </div>
    </div>
</body>
</html>";
    }

    /// <summary>
    /// –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
    /// </summary>
    public static string DailyReport(OwnerDashboardDto dashboard)
    {
        var content = $@"
<h2>üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ {dashboard.GeneratedAt:dd MMMM yyyy}</h2>

<div class='metric-box'>
    <div class='metric-label'>üí∞ –§–∏–Ω–∞–Ω—Å—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è</div>
    <table>
        <tr>
            <td>–í—ã—Ä—É—á–∫–∞:</td>
            <td style='text-align: right;'><strong>{dashboard.TodayRevenue:N0} UZS</strong></td>
        </tr>
        <tr>
            <td>–ü—Ä–∏–±—ã–ª—å:</td>
            <td style='text-align: right;'><strong>{dashboard.TodayProfit:N0} UZS</strong></td>
        </tr>
        <tr>
            <td>–ü—Ä–æ–¥–∞–∂:</td>
            <td style='text-align: right;'><strong>{dashboard.TodaySalesCount}</strong></td>
        </tr>
        <tr>
            <td>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫:</td>
            <td style='text-align: right;'><strong>{dashboard.TodayAverageCheck:N0} UZS</strong></td>
        </tr>
    </table>
</div>

<div class='metric-box'>
    <div class='metric-label'>üíµ –û—Å—Ç–∞—Ç–∫–∏ –≤ –∫–∞—Å—Å–∞—Ö</div>
    <table>
        {string.Join("", dashboard.CashboxBalances.Select(cb => $"<tr><td>{cb.Key}:</td><td style='text-align: right;'><strong>{cb.Value:N0} UZS</strong></td></tr>"))}
        <tr style='background: #f8f9fa;'>
            <td><strong>–í—Å–µ–≥–æ:</strong></td>
            <td style='text-align: right;'><strong>{dashboard.TotalCash:N0} UZS</strong></td>
        </tr>
    </table>
</div>

<div class='metric-box'>
    <div class='metric-label'>üì¶ –°–∫–ª–∞–¥</div>
    <table>
        <tr>
            <td>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞:</td>
            <td style='text-align: right;'><strong>{dashboard.InventoryValue:N0} UZS</strong></td>
        </tr>
        <tr>
            <td>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤:</td>
            <td style='text-align: right;'><strong>{dashboard.CriticalStockAlerts.Count}</strong> {(dashboard.CriticalStockAlerts.Any() ? "‚ö†Ô∏è" : "‚úÖ")}</td>
        </tr>
    </table>
</div>

<div class='metric-box'>
    <div class='metric-label'>üí∏ –î–æ–ª–≥–∏</div>
    <table>
        <tr>
            <td>–ö–ª–∏–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã:</td>
            <td style='text-align: right;'><strong>{dashboard.ClientDebts:N0} UZS</strong></td>
        </tr>
        <tr>
            <td>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö:</td>
            <td style='text-align: right;'><strong>{dashboard.OverdueDebts.Count}</strong> {(dashboard.OverdueDebts.Any() ? "‚ö†Ô∏è" : "‚úÖ")}</td>
        </tr>
    </table>
</div>

{(dashboard.Top5ProductsToday.Any() ? $@"
<h3>üèÜ –¢–û–ü-5 –¢–û–í–ê–†–û–í –î–ù–Ø</h3>
<table>
    <thead>
        <tr>
            <th>#</th>
            <th>–¢–æ–≤–∞—Ä</th>
            <th>–í—ã—Ä—É—á–∫–∞</th>
            <th>–ö–æ–ª-–≤–æ</th>
        </tr>
    </thead>
    <tbody>
        {string.Join("", dashboard.Top5ProductsToday.Take(5).Select((p, i) => $@"
        <tr>
            <td>{i + 1}</td>
            <td>{p.ProductName}</td>
            <td style='text-align: right;'>{p.TotalRevenue:N0} UZS</td>
            <td style='text-align: right;'>{p.TotalQuantity} —à—Ç</td>
        </tr>"))}
    </tbody>
</table>" : "<p>üèÜ <strong>–¢–û–ü-5 –¢–û–í–ê–†–û–í:</strong> –Ω–µ—Ç –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å–µ–≥–æ–¥–Ω—è</p>")}
";

        return BaseTemplate("–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç", content);
    }

    /// <summary>
    /// –ö—Ä—É–ø–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞
    /// </summary>
    public static string LargeSaleAlert(int saleId, string clientName, decimal total, string managerName, int itemsCount)
    {
        var content = $@"
<div class='success-box'>
    <h2>üî• –ö–†–£–ü–ù–ê–Ø –ü–†–û–î–ê–ñ–ê!</h2>
    <p>–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –∫—Ä—É–ø–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ –Ω–∞ —Å—É–º–º—É <strong>{total:N0} UZS</strong>!</p>
</div>

<table>
    <tr>
        <td>üìä –ü—Ä–æ–¥–∞–∂–∞:</td>
        <td><strong>#{saleId}</strong></td>
    </tr>
    <tr>
        <td>üë§ –ö–ª–∏–µ–Ω—Ç:</td>
        <td><strong>{clientName}</strong></td>
    </tr>
    <tr>
        <td>üí∞ –°—É–º–º–∞:</td>
        <td><strong>{total:N0} UZS</strong></td>
    </tr>
    <tr>
        <td>üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä:</td>
        <td><strong>{managerName}</strong></td>
    </tr>
    <tr>
        <td>üì¶ –¢–æ–≤–∞—Ä–æ–≤:</td>
        <td><strong>{itemsCount} –ø–æ–∑–∏—Ü–∏–π</strong></td>
    </tr>
    <tr>
        <td>üïê –í—Ä–µ–º—è:</td>
        <td><strong>{DateTime.UtcNow:dd.MM.yyyy HH:mm}</strong></td>
    </tr>
</table>

<p style='text-align: center; margin-top: 20px; font-size: 18px; color: #28a745;'>
    <strong>–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</strong>
</p>
";

        return BaseTemplate("–ö—Ä—É–ø–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞", content);
    }

    /// <summary>
    /// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    /// </summary>
    public static string CriticalStockAlert(List<StockAlertDto> alerts)
    {
        var content = $@"
<div class='danger-box'>
    <h2>üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–°–¢–ê–¢–ö–ò –¢–û–í–ê–†–û–í!</h2>
    <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ <strong>{alerts.Count}</strong> —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏.</p>
</div>

<table>
    <thead>
        <tr>
            <th>–¢–æ–≤–∞—Ä</th>
            <th>–û—Å—Ç–∞—Ç–æ–∫</th>
            <th>–ú–∏–Ω–∏–º—É–º</th>
            <th>–°–∫–ª–∞–¥</th>
        </tr>
    </thead>
    <tbody>
        {string.Join("", alerts.Take(10).Select(a => $@"
        <tr>
            <td>{a.ProductName}</td>
            <td style='text-align: right; color: #dc3545;'><strong>{a.CurrentStock} —à—Ç</strong></td>
            <td style='text-align: right;'>{a.MinimumStock} —à—Ç</td>
            <td>{a.WarehouseType}</td>
        </tr>"))}
    </tbody>
</table>

{(alerts.Count > 10 ? $"<p><em>...–∏ –µ—â—ë {alerts.Count - 10} —Ç–æ–≤–∞—Ä–æ–≤</em></p>" : "")}

<div class='alert-box'>
    <p><strong>‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–∫–ª–∞–¥!</strong></p>
</div>
";

        return BaseTemplate("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏", content);
    }

    /// <summary>
    /// –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–æ–ª–≥–∏
    /// </summary>
    public static string OverdueDebtsAlert(List<OverdueDebtDto> debts)
    {
        var totalAmount = debts.Sum(d => d.Amount);
        
        var content = $@"
<div class='danger-box'>
    <h2>üí∏ –ü–†–û–°–†–û–ß–ï–ù–ù–´–ï –î–û–õ–ì–ò –ö–õ–ò–ï–ù–¢–û–í!</h2>
    <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ <strong>{debts.Count}</strong> –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–æ–ª–≥–æ–≤ –Ω–∞ –æ–±—â—É—é —Å—É–º–º—É <strong>{totalAmount:N0} UZS</strong>.</p>
</div>

<table>
    <thead>
        <tr>
            <th>–ö–ª–∏–µ–Ω—Ç</th>
            <th>–°—É–º–º–∞</th>
            <th>–ü—Ä–æ—Å—Ä–æ—á–∫–∞</th>
        </tr>
    </thead>
    <tbody>
        {string.Join("", debts.Take(10).Select(d => $@"
        <tr>
            <td>{d.ClientName}</td>
            <td style='text-align: right;'><strong>{d.Amount:N0} UZS</strong></td>
            <td style='text-align: right; color: #dc3545;'><strong>{d.DaysOverdue} –¥–Ω–µ–π</strong></td>
        </tr>"))}
    </tbody>
</table>

{(debts.Count > 10 ? $"<p><em>...–∏ –µ—â—ë {debts.Count - 10} –¥–æ–ª–≥–æ–≤</em></p>" : "")}

<div class='alert-box'>
    <p><strong>‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∑—ã—Å–∫–∞—Ç—å –¥–æ–ª–≥–∏!</strong></p>
</div>
";

        return BaseTemplate("–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–æ–ª–≥–∏", content);
    }

    /// <summary>
    /// –ù–∏–∑–∫–∏–µ –±–∞–ª–∞–Ω—Å—ã –≤ –∫–∞—Å—Å–∞—Ö
    /// </summary>
    public static string LowCashBalanceAlert(Dictionary<string, decimal> lowBalances)
    {
        var content = $@"
<div class='alert-box'>
    <h2>üí∞ –ù–ò–ó–ö–ò–ï –ë–ê–õ–ê–ù–°–´ –í –ö–ê–°–°–ê–•!</h2>
    <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–∞—Å—Å—ã —Å –±–∞–ª–∞–Ω—Å–æ–º –º–µ–Ω–µ–µ 1,000,000 UZS.</p>
</div>

<table>
    <thead>
        <tr>
            <th>–ö–∞—Å—Å–∞</th>
            <th>–ë–∞–ª–∞–Ω—Å</th>
        </tr>
    </thead>
    <tbody>
        {string.Join("", lowBalances.Select(cb => $@"
        <tr>
            <td>{cb.Key}</td>
            <td style='text-align: right; color: #ffc107;'><strong>{cb.Value:N0} UZS</strong></td>
        </tr>"))}
    </tbody>
</table>

<div class='alert-box'>
    <p><strong>‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Å—Å—ã.</strong></p>
</div>
";

        return BaseTemplate("–ù–∏–∑–∫–∏–µ –±–∞–ª–∞–Ω—Å—ã –≤ –∫–∞—Å—Å–∞—Ö", content);
    }
}
